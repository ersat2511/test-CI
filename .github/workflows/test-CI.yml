name: CI

on:
  issue_comment:
    types:
      - created

jobs:
  setup:
    runs-on: ubuntu-latest
    if: ${{ (github.event.issue.pull_request && (github.event.comment.body == 'build' || github.event.comment.body == 'deploy')) }}
    outputs:
      head_ref: ${{ steps.comment-branch.outputs.head_ref}}
      base_ref: ${{ steps.comment-branch.outputs.base_ref}}
      flutter_path: ${{ steps.get-flutter.outputs.CACHE_PATH }}
      flutter_key: ${{ steps.get-flutter.outputs.CACHE_KEY }}
      get-matrix: ${{ steps.get-matrix.outputs.matrix }}
      issue_number: ${{ steps.get-pr-details.outputs.number }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

  test1:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup.outputs.head_ref }}

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.setup.outputs.flutter_version }}
          cache: true
           
      - name: Install lcov
        uses: hrishikesh-kadam/setup-lcov@v1
            
      - name: Setup Melos and Install Dependencies
        run: dart pub global activate melos 2.9.0 && dart pub global run melos bs
      
      - name: run test
        run: melos test_coverage_all

      - name: run test
        run: melos testCoverageAverage
        id: get-coverage-average

      - name: find average coverage
        run: |
          echo "coverage_average=$(cat coverage_average)" >> $GITHUB_OUTPUT
        id: get-app-coverage-average

      - name: find average coverage
        run: |
          echo average_coverage="average mitra apps : $(echo ${{ steps.get-coverage-average.outputs.coverage_average }}))"
        id: get-app-average-coverage

  test2:
    runs-on: ubuntu-latest
    needs: [setup,test1]
    if: ${{ always() }}
    steps:
      - name: Create comment
        run: |
          echo 

